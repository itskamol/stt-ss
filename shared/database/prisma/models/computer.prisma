model ComputerUser {
    id         Int     @id @default(autoincrement())
    employeeId Int     @map("employee_id")
    sid        String  @unique
    name       String
    domain     String?
    username   String
    isAdmin    Boolean @default(false) @map("is_admin")
    isInDomain Boolean @default(false) @map("is_in_domain")

    // --- Standard Fields ---
    isActive  Boolean  @default(true) @map("is_active")
    createdAt DateTime @default(now()) @map("created_at")
    updatedAt DateTime @updatedAt @map("updated_at")

    employee         Employee           @relation(fields: [employeeId], references: [id])
    usersOnComputers UsersOnComputers[]

    @@map("computer_users")
}

model Computer {
    id          Int     @id @default(autoincrement())
    computerUid String  @unique @map("computer_uid")
    os          String?
    ipAddress   String? @map("ip_address")
    macAddress  String? @map("mac_address")

    // --- Standard Fields ---
    isActive  Boolean  @default(true) @map("is_active")
    createdAt DateTime @default(now()) @map("created_at")
    updatedAt DateTime @updatedAt @map("updated_at")

    usersOnComputers UsersOnComputers[]

    @@map("computers")
}

model UsersOnComputers {
    id             Int @id @default(autoincrement())
    computerUserId Int @map("computer_user_id")
    computerId     Int @map("computer_id")

    // --- Standard Fields ---
    isActive  Boolean  @default(true) @map("is_active")
    createdAt DateTime @default(now()) @map("created_at")
    updatedAt DateTime @updatedAt @map("updated_at")

    computerUser  ComputerUser   @relation(fields: [computerUserId], references: [id])
    computer      Computer       @relation(fields: [computerId], references: [id])
    activeWindows ActiveWindow[]
    visitedSites  VisitedSite[]
    screenshots   Screenshot[]
    userSessions  UserSession[]

    @@map("users_on_computers")
}
