version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    container_name: sector-staff-postgres-dev
    environment:
      POSTGRES_DB: sector_staff_v2
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5433:5432"
    volumes:
      - postgres_dev_data:/var/lib/postgresql/data
    networks:
      - sector-staff-dev-network
    restart: unless-stopped

  redis:
    image: redis:7-alpine
    container_name: sector-staff-redis-dev
    ports:
      - "6380:6379"
    volumes:
      - redis_dev_data:/data
    networks:
      - sector-staff-dev-network
    restart: unless-stopped

  app:
    build:
      context: .
      dockerfile: Dockerfile
      target: development
    container_name: sector-staff-app-dev
    ports:
      - "3001:3000"
    env_file:
      - .env.docker
    environment:
      - NODE_ENV=development
      - DATABASE_URL=postgresql://postgres:postgres@postgres:5432/sector_staff_v2
      - REDIS_URL=redis://redis:6379
    volumes:
      - .:/app
      - /app/node_modules
    depends_on:
      - postgres
      - redis
    networks:
      - sector-staff-dev-network
    restart: unless-stopped
    command: npm run start:dev

  minio:
    image: minio/minio:latest
    container_name: sector-staff-minio-dev
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    ports:
      - "9001:9000"
      - "9002:9001"
    volumes:
      - minio_dev_data:/data
    command: server /data --console-address ":9001"
    networks:
      - sector-staff-dev-network
    restart: unless-stopped

volumes:
  postgres_dev_data:
  redis_dev_data:
  minio_dev_data:

networks:
  sector-staff-dev-network:
    driver: bridge
